#!/bin/bash
set -euo pipefail

SERVICE_NAME="nebula"
SERVICE_USER="nebula"
CONF_DIR="/etc/nebula"
TEMPLATE_DIR="/usr/share/nebula/templates"

if [[ "$1" = "configure" ]]; then
    # create service user if missing
    if ! id "$SERVICE_USER" &>/dev/null; then
        useradd --system --home /var/lib/nebula --shell /usr/sbin/nologin "$SERVICE_USER"
    fi

    # generate / refresh config with simconf
    if [[ -z "${SIMCONF_STATUS:-}" ]]; then
        mkdir -p "$CONF_DIR"
        exec -a "$0" simconf execute-templates \
            $(if [[ -f /tmp/nebula.reconfigure ]]; then echo "--reconfigure"; fi) \
            --exec-deb-script \
            "$TEMPLATE_DIR" \
            "$CONF_DIR" \
            -- "$@"
    fi
    rm -f /tmp/nebula.reconfigure || true
    if grep -qF "[Resolve]" "${CONF_DIR}/nebula_dns.conf"; then
        mkdir -p /etc/systemd/resolved.conf.d
        ln -fs "${CONF_DIR}/nebula_dns.conf" /etc/systemd/resolved.conf.d/nebula_dns.conf
    else
        rm -f /etc/systemd/resolved.conf.d/nebula_dns.conf;
    fi;

    # enable + start service
    systemctl daemon-reload
    systemctl enable --now "${SERVICE_NAME}.service" || true
fi
