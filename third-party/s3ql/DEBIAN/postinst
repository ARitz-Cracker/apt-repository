#!/bin/bash
set -e
if [ "$1" = "configure" ]; then
	if [ -z "${SIMCONF_STATUS:-}" ]; then
		mkdir -p /etc/s3ql;
		exec -a "$0" simconf execute-templates \
			$(if [ -f "/tmp/caraneer-config-s3ql.reconfigure" ]; then echo "--reconfigure"; fi) \
			--verbose \
			--exec-deb-script \
			"/usr/share/caraneer-config-s3ql/templates" \
			"/etc/s3ql" \
			-- "$@";
	fi;
	chmod 600 /etc/s3ql/authinfo2
	# Set up fresh venv, but only do so if this isn't a reconfigure
	deb-systemd-invoke stop s3ql-mounts.service
	if ! [ -f "/tmp/caraneer-config-s3ql.reconfigure" ] || ! [ -d /opt/s3ql-venv ]; then
		if [ -d /opt/s3ql-venv ]; then
			rm -rf /opt/s3ql-venv;
		fi
		python3 -m venv /opt/s3ql-venv
		# 2. Copy original tarball contents into the venv
		cp -r /usr/share/s3ql/* /opt/s3ql-venv

		# 3. Install s3ql into the venv using its setup.py
		export PATH="/opt/s3ql-venv/bin:$PATH";
		export VIRTUAL_ENV="/opt/s3ql-venv";
		# Dependencies listed from https://www.rath.org/s3ql-docs/installation.html#running-s3ql-commands-directly
		pushd $VIRTUAL_ENV;
		/opt/s3ql-venv/bin/pip install \
			apsw cryptography defusedxml trio pyfuse3 pytest \
			requests google-auth google-auth-oauthlib pytest_trio setuptools
		/opt/s3ql-venv/bin/python /opt/s3ql-venv/setup.py build_ext --inplace
		# /opt/s3ql-venv/bin/python -m pytest /opt/s3ql-venv/tests/
		popd
	fi
	rm -f "/tmp/caraneer-config-s3ql.reconfigure" || true;
	systemctl daemon-reload || true
	if deb-systemd-helper deb-systemd-helper-enabled s3ql-mounts.service; then
		deb-systemd-invoke restart s3ql-mounts.service || true
	fi
	if [ -n "$2" ]; then
		# There was no "old version", therefore this is a new install, so we should make sure s3ql is started.
		deb-systemd-invoke enable s3ql-mounts.service || true
		deb-systemd-invoke start s3ql-mounts.service || true
	fi
fi;
